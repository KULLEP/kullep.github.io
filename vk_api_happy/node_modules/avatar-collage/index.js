#!/usr/bin/env node

const { createCanvas, loadImage } = require('canvas');
const fs = require('fs');
const dir = require('node-dir');
const path = require('path');
const parseArgs = require('minimist');
const args = parseArgs(process.argv.slice(2));
const directory = path.join(process.cwd(), args._[0]);
const avatarSize = args.avatarSize || 200;
const rowLength = args.rowLength || 10;

(async () => {
	console.log('Starting avatar collage...');
	const files = shuffle(await dir.promiseFiles(directory)).filter(file => file.endsWith('.png'));
	console.log(`Read ${files.length} images!`);
	const width = files.length > rowLength ? avatarSize * rowLength : avatarSize * files.length;
	const height = files.length > rowLength ? Math.ceil(files.length / rowLength) * avatarSize : avatarSize;
	console.log(`Resulting image will be ${width}x${height}.`);
	const canvas = createCanvas(width, height);
	const ctx = canvas.getContext('2d');
	let currentX = 0;
	let currentY = 0;
	for (const file of files) {
		console.log(`Adding ${file}...`);
		const image = await loadImage(file);
		ctx.drawImage(image, currentX, currentY, avatarSize, avatarSize);
		if (currentX + avatarSize === width && currentY + avatarSize !== height) {
			console.log('Shifting to new row...');
			currentX = 0;
			currentY += avatarSize;
		} else {
			currentX += avatarSize;
		}
		console.log(`Added ${file}!`);
	}
	fs.writeFileSync(path.join(directory, 'collage.png'), canvas.toBuffer(), { encoding: 'binary' });
	console.log('All Done!');
})();

function shuffle(array) {
	const arr = array.slice(0);
	for (let i = arr.length - 1; i >= 0; i--) {
		const j = Math.floor(Math.random() * (i + 1));
		const temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
	return arr;
}
